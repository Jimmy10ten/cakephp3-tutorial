# GitHub Action for CakePHP with MySQL and Redis
# Tested with https://github.com/cakephp/app
# nuzul fikrie salam version for testing cakephp v3.10.18
name: Testing CakePHP with MySQL

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  testsuite:
    env:
      DB: cms
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.4']
        db-type: [ mysql]
        prefer-lowest: ['']
        include:
          - php-version: '7.4'
            db-type: 'mysql'
            prefer-lowest: 'prefer-lowest'

    services:
      redis:
        image: redis
        ports:
          - 6379/tcp
      memcached:
        image: memcached
        ports:
          - 11211/tcp

    steps:

    - name: Setup MySQL 8.0
      if: matrix.db-type == 'mysql' && matrix.php-version == '7.4'
      run: docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=$DB -p 3306:3306 -d mysql:8.0 --character-set-server=utf8

    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl, apcu, memcached, redis, pdo_${{ matrix.db-type }}
        ini-values: apc.enable_cli = 1
        coverage: pcov

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Get date part for cache key
      id: key-date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

    - name: Composer install
      run: |
        if [[ ${{ matrix.php-version }} == '8.0' ]]; then
          composer install --ignore-platform-reqs
        elif ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
          composer update --prefer-lowest --prefer-stable
        else
          composer update
        fi

        if [[ ${{ matrix.php-version }} == '7.4' ]]; then
          composer require --dev pcov/clobber
        fi

    - name: Configure PHPUnit matcher
      if: matrix.php-version == '7.4' && matrix.db-type == 'mysql'
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Run PHPUnit
      env:
        DB: cms
        MAIL_HOST: smtp.mailtrap.io
        MAIL_USERNAME: b97cb857629c4e
        MAIL_PASSWORD: 69e83f96de9863
        MAIL_PORT: 2525
        MAIL_FROM: webmaster@eaglenavigator.com
        DB_HOST: localhost
        DB_PORT: 3306
        DB_DATABASE: cms
        DB_USERNAME: root
        DB_PASSWORD: ''
        REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
        MEMCACHED_PORT: ${{ job.services.memcached.ports['11211'] }}
      run: |
        if [[ ${{ matrix.db-type }} == 'sqlite' ]]; then export db_dsn='sqlite:///:memory:'; fi
        if [[ ${{ matrix.db-type }} == 'mysql' && ${{ matrix.php-version }} == '7.4' ]]; then export db_dsn='mysql://root:root@127.0.0.1/$DB?encoding=utf8'; fi

        if [[ ${{ matrix.php-version }} == '7.4' ]]; then
          export CODECOVERAGE=1 && vendor/bin/pcov clobber; vendor/bin/phpunit --coverage-clover=coverage.xml
        else
          vendor/bin/phpunit
        fi

    - name: Submit code coverage
      if: matrix.php-version == '7.4'
      uses: codecov/codecov-action@v1

  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl, apcu, memcached, redis
        coverage: none

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Get date part for cache key
      id: key-date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    - name: Cache composer dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}

    - name: Composer install
      run: |
        composer update
        composer phpstan-setup

    - name: Run PHP CodeSniffer
      run: composer cs-check

    - name: Run phpstan
      run: composer phpstan